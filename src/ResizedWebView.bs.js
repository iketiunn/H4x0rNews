// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");
var Style$BsReactNative = require("bs-react-native/src/style.js");
var WebView$BsReactNative = require("bs-react-native/src/components/webView.js");
var Platform$BsReactNative = require("bs-react-native/src/platform.js");
var Dimensions$BsReactNative = require("bs-react-native/src/dimensions.js");

var screenWidth = Dimensions$BsReactNative.get(/* window */-762539024).width;

var component = ReasonReact.reducerComponent("ResizedWebView");

function make(content, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var html = "<div>" + (content + "</div><script> window.onload = function () { window.location.hash = 1; document.title = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight; } </script>");
              return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, WebView$BsReactNative.make(Js_primitive.some(WebView$BsReactNative.sourceHtml(html, undefined, /* () */0)), Js_primitive.some(Style$BsReactNative.style(/* :: */[
                                                  Style$BsReactNative.backgroundColor(/* String */Block.__(0, ["#00000000"])),
                                                  /* :: */[
                                                    Style$BsReactNative.width(/* Pt */Block.__(0, [screenWidth])),
                                                    /* :: */[
                                                      Style$BsReactNative.height(/* Pt */Block.__(0, [self[/* state */1][/* webViewHeight */0]])),
                                                      /* [] */0
                                                    ]
                                                  ]
                                                ])), undefined, undefined, undefined, undefined, undefined, undefined, true, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, (function ($$event) {
                                            var unsafeHeight = $$event.title;
                                            if (unsafeHeight !== undefined) {
                                              var isNum = unsafeHeight.match(new RegExp("[0-9]+"));
                                              if (isNum !== null) {
                                                var height = Caml_format.caml_float_of_string(List.hd($$Array.to_list(isNum)));
                                                Curry._1(self[/* send */3], /* Loaded */[height]);
                                              }
                                              return /* () */0;
                                            } else {
                                              return /* () */0;
                                            }
                                          }), Platform$BsReactNative.os(/* () */0) === /* Android */0, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, false)(/* array */[]))]));
            }),
          /* initialState */(function (param) {
              return /* record */[/* webViewHeight */0.0];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _state) {
              return /* Update */Block.__(0, [/* record */[/* webViewHeight */action[0]]]);
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.screenWidth = screenWidth;
exports.component = component;
exports.make = make;
/* screenWidth Not a pure module */
