// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var AppStyle = require("./AppStyle.bs.js");
var ReactCompat = require("reason-react-compat/src/ReactCompat.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReactNative = require("react-native");

var component = ReasonReact.statelessComponent("NewsFlatList");

var commentImageSource = require("../assets/comment.png");

var shareImageSource = require("../assets/share-button.png");

var linkImageSource = require("../assets/link.png");

function NewsFlatList(Props) {
  var data = Props.data;
  var refreshing = Props.refreshing;
  var onRefresh = Props.onRefresh;
  var onEndReached = Props.onEndReached;
  var navigation = Props.navigation;
  return ReactCompat.useRecordApi(/* record */[
              /* debugName */component[/* debugName */0],
              /* reactClassInternal */component[/* reactClassInternal */1],
              /* handedOffState */component[/* handedOffState */2],
              /* willReceiveProps */component[/* willReceiveProps */3],
              /* didMount */component[/* didMount */4],
              /* didUpdate */component[/* didUpdate */5],
              /* willUnmount */component[/* willUnmount */6],
              /* willUpdate */component[/* willUpdate */7],
              /* shouldUpdate */component[/* shouldUpdate */8],
              /* render */(function (_self) {
                  var renderItem = function (news) {
                    var index = String(news.index + 1 | 0);
                    var match = news.item[/* points */2];
                    var pointInt = match !== undefined ? match : 0;
                    var point = String(pointInt) + "p";
                    var title = news.item[/* title */1];
                    var match$1 = news.item[/* domain */9];
                    var domain = match$1 !== undefined ? match$1 : "";
                    var match$2 = news.item[/* user */3];
                    var user = match$2 !== undefined ? "by " + match$2 : "";
                    var timeAgo = news.item[/* time_ago */5];
                    var timeAgoAndUser = user + (" " + timeAgo);
                    var commentsCount = String(news.item[/* comments_count */6]);
                    var navigateToComment = function (_e) {
                      navigation.navigate("Comments", {
                            title: title,
                            storyId: news.item[/* id */0]
                          });
                      return /* () */0;
                    };
                    var openUrl = function (param) {
                      var match = domain === "";
                      if (match) {
                        return navigateToComment(/* () */0);
                      } else {
                        ReactNative.Linking.openURL(news.item[/* url */8]);
                        return /* () */0;
                      }
                    };
                    var sharePostLink = function (_e) {
                      var url = "https://news.ycombinator.com/item?id=" + String(news.item[/* id */0]);
                      var content = {
                        message: news.item[/* title */1] + (": " + (url + "\n")),
                        url: url
                      };
                      ReactNative.Share.share(content, {
                              dialogTitle: "Share HN Link"
                            }).then((function (ret) {
                              return Promise.resolve(ret);
                            }));
                      return /* () */0;
                    };
                    var shareArticleLink = function (_e) {
                      var result = news.item[/* url */8].startsWith("http");
                      var url = result ? news.item[/* url */8] : "https://news.ycombinator.com/" + news.item[/* url */8];
                      var content = {
                        message: news.item[/* title */1] + (": " + (url + "\n")),
                        url: url
                      };
                      ReactNative.Share.share(content, {
                              dialogTitle: "Share Article Link"
                            }).then((function (ret) {
                              return Promise.resolve(ret);
                            }));
                      return /* () */0;
                    };
                    return React.createElement(ReactNative.View, {
                                style: AppStyle.NewsPage[/* listItemContainer */2],
                                children: null
                              }, React.createElement(ReactNative.View, {
                                    style: AppStyle.NewsPage[/* listIndex */3],
                                    children: null
                                  }, React.createElement(ReactNative.Text, {
                                        style: AppStyle.NewsPage[/* listIndex */3],
                                        children: index
                                      }), React.createElement(ReactNative.Text, {
                                        style: AppStyle.NewsPage[/* listIndex */3],
                                        children: point
                                      })), React.createElement(ReactNative.View, {
                                    style: AppStyle.NewsPage[/* listContent */4],
                                    children: null
                                  }, React.createElement(ReactNative.Text, {
                                        onPress: openUrl,
                                        style: AppStyle.NewsPage[/* title */5],
                                        children: title
                                      }), React.createElement(ReactNative.Text, {
                                        style: AppStyle.NewsPage[/* domain */6],
                                        value: domain,
                                        children: domain
                                      }), React.createElement(ReactNative.View, {
                                        style: AppStyle.NewsPage[/* timeAgoAndUserAndLinkContainer */7],
                                        children: null
                                      }, React.createElement(ReactNative.Text, {
                                            style: AppStyle.NewsPage[/* timeAgoAndUser */8],
                                            children: timeAgoAndUser
                                          }), React.createElement(ReactNative.TouchableOpacity, {
                                            onPress: shareArticleLink,
                                            children: React.createElement(ReactNative.Image, {
                                                  source: linkImageSource,
                                                  style: AppStyle.NewsPage[/* linkImage */11]
                                                })
                                          }))), React.createElement(ReactNative.View, {
                                    style: AppStyle.NewsPage[/* commentAndShareContainer */9],
                                    children: null
                                  }, React.createElement(ReactNative.TouchableOpacity, {
                                        onPress: sharePostLink,
                                        children: React.createElement(ReactNative.Image, {
                                              source: shareImageSource,
                                              style: AppStyle.NewsPage[/* shareImage */12]
                                            })
                                      }), React.createElement(ReactNative.TouchableOpacity, {
                                        onPress: navigateToComment,
                                        children: React.createElement(ReactNative.View, {
                                              style: AppStyle.NewsPage[/* commentContainer */10],
                                              children: null
                                            }, React.createElement(ReactNative.Image, {
                                                  source: commentImageSource,
                                                  style: AppStyle.Common[/* image */6]
                                                }), React.createElement(ReactNative.Text, {
                                                  style: AppStyle.NewsPage[/* commentCount */13],
                                                  children: commentsCount
                                                }))
                                      })));
                  };
                  var keyExtractor = function (_item, index) {
                    return String(index);
                  };
                  var itemSeparatorComponent = function (_props) {
                    return React.createElement(ReactNative.View, {
                                style: AppStyle.NewsPage[/* separator */1]
                              });
                  };
                  return React.createElement(ReactNative.FlatList, {
                              ItemSeparatorComponent: itemSeparatorComponent,
                              data: data,
                              keyExtractor: keyExtractor,
                              onEndReached: onEndReached,
                              onEndReachedThreshold: 0.5,
                              onRefresh: onRefresh,
                              refreshing: refreshing,
                              renderItem: renderItem
                            });
                }),
              /* initialState */component[/* initialState */10],
              /* retainedProps */component[/* retainedProps */11],
              /* reducer */component[/* reducer */12],
              /* jsElementWrapped */component[/* jsElementWrapped */13]
            ]);
}

var make = NewsFlatList;

exports.component = component;
exports.commentImageSource = commentImageSource;
exports.shareImageSource = shareImageSource;
exports.linkImageSource = linkImageSource;
exports.make = make;
/* component Not a pure module */
