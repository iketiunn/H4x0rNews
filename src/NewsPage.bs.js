// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Data = require("./Data.bs.js");
var List = require("bs-platform/lib/js/list.js");
var Util = require("./Util.bs.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var AppStyle = require("./AppStyle.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var NewsFlatList = require("./NewsFlatList.bs.js");
var BackToTopButton = require("./BackToTopButton.bs.js");
var Text$BsReactNative = require("bs-react-native/src/components/text.js");
var View$BsReactNative = require("bs-react-native/src/components/view.js");
var SafeAreaView$BsReactNative = require("bs-react-native/src/components/safeAreaView.js");

var component = ReasonReact.reducerComponent("App");

function make(navigation, _children) {
  var loadNews = function (param) {
    var state = param[/* state */1];
    if (state[/* page */1] < 10 && !state[/* isLoading */2]) {
      var send = param[/* send */3];
      var newPage = state[/* page */1] + 1 | 0;
      Util.withTimeout(Data.fetchNewList(String(newPage), /* () */0), 30000).then((function (newsList) {
                return Promise.resolve(Curry._1(send, /* Loaded */[/* tuple */[
                                  newPage,
                                  newsList
                                ]]));
              })).catch((function (_err) {
              return Promise.resolve(Curry._1(send, /* Timeout */2));
            }));
      return Curry._1(send, /* Loading */1);
    } else {
      return 0;
    }
  };
  var reload = function (param) {
    var send = param[/* send */3];
    Curry._1(send, /* Init */0);
    Util.withTimeout(Data.fetchNewList(String(1), /* () */0), 30000).then((function (newsList) {
              return Promise.resolve(Curry._1(send, /* Loaded */[/* tuple */[
                                1,
                                newsList
                              ]]));
            })).catch((function (_err) {
            return Promise.resolve(Curry._1(send, /* Timeout */2));
          }));
    return /* () */0;
  };
  var init = function (param) {
    return /* record */[
            /* newsList : [] */0,
            /* page */0,
            /* isLoading */false,
            /* timeout */false
          ];
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */loadNews,
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return ReasonReact.element(undefined, undefined, Curry.app(SafeAreaView$BsReactNative.make, [
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              Js_primitive.some(AppStyle.pageContainer),
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              /* array */[self[/* state */1][/* timeout */3] ? ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Js_primitive.some(AppStyle.news), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                                            ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, (function (param) {
                                                        return reload(self);
                                                      }), undefined, undefined, Js_primitive.some(AppStyle.Common[/* textCenter */1]), undefined, undefined, undefined, undefined, undefined, undefined, "Timeout...Tap Back-To-Top Button to reload", /* array */[])),
                                            ReasonReact.element(undefined, undefined, BackToTopButton.make((function (param) {
                                                        return reload(self);
                                                      }), /* array */[]))
                                          ])) : ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Js_primitive.some(AppStyle.news), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                                            ReasonReact.element(undefined, undefined, NewsFlatList.make($$Array.of_list(self[/* state */1][/* newsList */0]), self[/* state */1][/* isLoading */2], (function (param) {
                                                        return reload(self);
                                                      }), (function (param) {
                                                        return loadNews(self);
                                                      }), navigation, /* array */[])),
                                            ReasonReact.element(undefined, undefined, BackToTopButton.make((function (param) {
                                                        return reload(self);
                                                      }), /* array */[]))
                                          ]))]
                            ]));
            }),
          /* initialState */init,
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                switch (action) {
                  case 0 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* newsList : [] */0,
                                  /* page */0,
                                  /* isLoading */false,
                                  /* timeout */false
                                ]]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* newsList */state[/* newsList */0],
                                  /* page */state[/* page */1],
                                  /* isLoading */true,
                                  /* timeout */state[/* timeout */3]
                                ]]);
                  case 2 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* newsList */state[/* newsList */0],
                                  /* page */state[/* page */1],
                                  /* isLoading */state[/* isLoading */2],
                                  /* timeout */true
                                ]]);
                  
                }
              } else {
                var match = action[0];
                return /* Update */Block.__(0, [/* record */[
                            /* newsList */List.append(state[/* newsList */0], match[1]),
                            /* page */match[0],
                            /* isLoading */false,
                            /* timeout */false
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
